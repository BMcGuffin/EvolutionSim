/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package evosimApp;

import evosimSources.*;
import java.util.Observable;
import junit.framework.TestCase;

/**
 *
 * @author bryanmcguffin
 */
public class MapDisplayTest extends TestCase
{

    public MapDisplayTest(String testName)
    {
        super(testName);
    }

    /**
     * Test of update method, of class MapDisplay.
     */
    public void testUpdate()
    {
        System.out.println("update");
        Map map = new Map(20);
        Object arg = null;
        String expStrg;
        expStrg = " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------";

        MapDisplay instance = new MapDisplay(map);
        instance.update(map, arg);
        assertEquals(expStrg, instance.getRawMap());
        
        expStrg = " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   | C |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   |   |   | X |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------";

        map.grid[1][1] = new Carnivore();
        map.grid[5][3] = new Map(1);
        instance.update(map, arg);
        assertEquals(expStrg, instance.getRawMap());
    }

    /**
     * Test of toString method, of class MapDisplay.
     */
    public void testToString()
    {
        System.out.println("toString");
        int x = 0;
        int y = 0;
        Map m = new Map(20);
        MapDisplay instance = new MapDisplay(m);
        String result = instance.toString(0, 0);
        assertEquals(" ", result);

        result = instance.toString(4, 7);
        assertEquals(" ", result);
        m.grid[4][7] = new Carnivore();
        result = instance.toString(4, 7);
        assertEquals("C", result);

        result = instance.toString(5, 3);
        assertEquals(" ", result);
        m.grid[5][3] = new Herbivore();
        result = instance.toString(5, 3);
        assertEquals("H", result);

        result = instance.toString(2, 2);
        assertEquals(" ", result);
        m.grid[2][2] = new Plant();
        result = instance.toString(2, 2);
        assertEquals("P", result);

        result = instance.toString(2, 3);
        assertEquals(" ", result);
        m.grid[2][3] = new String();
        result = instance.toString(2, 3);
        assertEquals("X", result);
    }
    
    public void testGetRawMap()
    {
        System.out.println("getRawMap");
        Map map = new Map(20);
        Object arg = null;
        String expStrg;
        expStrg = " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------\n"
                + " |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n"
                + " ---------------------------------------------------------------------------------";

        MapDisplay instance = new MapDisplay(map);
        assertEquals(expStrg, instance.getRawMap());   
    }
}
